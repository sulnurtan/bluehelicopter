name: deploy-production

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: login to registry
      uses: docker/login-action@v1
      with:
        registry: ${{ secrets.REGISTRY }}
        username: ${{ secrets.REGISTRY_LOGIN }}
        password: ${{ secrets.REGISTRY_SECRET }}

    - name: set up docker buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: build and push flask
      uses: docker/build-push-action@v2
      with:
        context: .
        tags: ${{ secrets.REGISTRY }}/${{ secrets.IMAGE }}:prod-${{github.sha}}
        builder: ${{ steps.buildx.outputs.name }}
        build-args: |
          STATUS=production
        push: true
        cache-from: type=local,src=/tmp/.buildx-cache-flask
        cache-to: type=local,dest=/tmp/.buildx-cache-flask

    - run: echo "${{secrets.DEPLOY_SSHKEY_PROD}}" > id_rsa && chmod 600 id_rsa
    - run: ssh -nNT -o 'StrictHostKeyChecking no' -i id_rsa -L /tmp/docker.sock:/var/run/docker.sock -l ${{secrets.DEPLOY_USERNAME}} ${{secrets.DEPLOY_HOST_PROD}} &

    - name: Login to registry on the server
      uses: docker/login-action@v1
      with:
        registry: ${{ secrets.REGISTRY }}
        username: ${{ secrets.REGISTRY_LOGIN }}
        password: ${{ secrets.REGISTRY_SECRET }}
      env:
        DOCKER_HOST: unix:///tmp/docker.sock

    - run: docker-compose pull -q
      env:
        DOCKER_HOST: unix:///tmp/docker.sock
        COMPOSE_FILE: docker-compose.remote.yml
        DOCKER_REGISTRY: ${{ secrets.REGISTRY }}
        BUILD_TAG: ${{github.sha}}
        STATUS: prod
        DOCKER_IMAGE: ${{ secrets.IMAGE }}

    - run: docker-compose up -d
      env:
        DOCKER_HOST: unix:///tmp/docker.sock
        COMPOSE_FILE: docker-compose.remote.yml
        DOCKER_REGISTRY: ${{ secrets.REGISTRY }}
        BUILD_TAG: ${{github.sha}}
        STATUS: prod
        DOCKER_IMAGE: ${{ secrets.IMAGE }}
        AT_BASE_ID: ${{ secrets.AT_BASE_ID }}
        AT_API_KEY: ${{ secrets.AT_API_KEY }}
